# -*- coding: utf-8 -*-
"""code.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ET9oHGQZXVeL48jfKFc8ze4dFsHpj4aE
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import tensorflow as tf
# %matplotlib inline
from tensorflow import keras

image_train = pd.read_csv('train.csv')
image_test = pd.read_csv('test.csv')

image_train.head()

x_test = image_test.iloc[:,:].values

image_train.shape

x_train = image_train.iloc[:,1:].values
y_train = image_train.iloc[:,0].values

x_train = x_train/255
x_test = x_test/255

x_train

y_train

x_train.shape

# Reshape the 1D array into a 2D array
image_matrix = x_train[1].reshape((28, 28))
# Display the reshaped image using matshow
plt.matshow(image_matrix, cmap='gray')
plt.show()

y_train[1]

model = keras.Sequential([
    keras.layers.Dense(100,input_shape=(784,),activation='relu'),
    keras.layers.Dense(10,activation='sigmoid')
])

model.compile(
    optimizer='adam',
    loss='sparse_categorical_crossentropy',
    metrics=['accuracy']
)

model.fit(x_train,y_train,epochs=5)

y_predicted = model.predict(x_test)

for i in range(10):
    plt.subplot(2, 5, i+1)  # 2 rows, 5 columns, i+1 is the current subplot index
    plt.title(f'Number:{np.argmax(y_predicted[i])}')

    image_matrix = x_test[i].reshape((28, 28))
    plt.imshow(image_matrix, cmap='gray')
    plt.axis('off')  # Turn off axis labels for better visualization

plt.show()



